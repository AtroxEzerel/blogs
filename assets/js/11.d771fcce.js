(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{562:function(t,s,a){"use strict";a.r(s);var n=a(17),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_5-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-数据类型"}},[t._v("#")]),t._v(" 5.数据类型")]),t._v(" "),a("h3",{attrs:{id:"_1-数据类型的简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据类型的简介"}},[t._v("#")]),t._v(" 1.数据类型的简介")]),t._v(" "),a("h4",{attrs:{id:"_1-为什么需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么需要"}},[t._v("#")]),t._v(" 1.为什么需要")]),t._v(" "),a("ul",[a("li",[t._v("在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不同的数据，充分利用存储空间，于是定义了不同的数据类型。")])]),t._v(" "),a("h4",{attrs:{id:"_2-变量的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量的数据类型"}},[t._v("#")]),t._v(" 2.变量的数据类型")]),t._v(" "),a("ul",[a("li",[t._v("变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。JavaScript是一种弱类型或者说动态语言。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。")]),t._v(" "),a("li",[t._v("在代码运行时，变量的数据类型是由JS引擎根据=右边变量值的数据类型来判断的，运行完毕之后，变量就确定了数据类型。")]),t._v(" "),a("li",[t._v("JavaScript拥有动态类型，同时也意味着相同的变量可用作不同的类型:")])]),t._v(" "),a("h4",{attrs:{id:"_3-数据类型的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型的分类"}},[t._v("#")]),t._v(" 3.数据类型的分类")]),t._v(" "),a("p",[a("strong",[t._v("JS把数据类型分为两类∶")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("简单数据类型( Number, string,Boolean , Undefined,Nul1)")])]),t._v(" "),a("li",[a("p",[t._v("复杂数据类型（ object)")])])]),t._v(" "),a("h3",{attrs:{id:"_2-简单数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-简单数据类型"}},[t._v("#")]),t._v(" 2.简单数据类型")]),t._v(" "),a("h4",{attrs:{id:"_1-简单数据类型-基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简单数据类型-基本数据类型"}},[t._v("#")]),t._v(" 1.简单数据类型（基本数据类型）")]),t._v(" "),a("p",[t._v('简单数据类型  说明                                                                    \t\t\t\t默认值\nNumber           数字型，包含整型值和浮点型值，如21、0.21  \t\t\t\t 0\nBoolean          布尔值类型，如true . false，等价于1和0           \t\t \t\talse\nString              字符串类型，如"张三”注意咱们js 里面，字符串都带引号   ""\nUndefined       var a;声明了变量a但是没有给值，此时a = undefined         undefined\nNull                 var a = null;声明了变量a 为空值                                          null')]),t._v(" "),a("h4",{attrs:{id:"_2-数字型number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数字型number"}},[t._v("#")]),t._v(" 2.数字型Number")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript数字类型既可以用来保存整数值，也可以保存小数(浮点数）。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.3")]),t._v("\n")])])]),a("h5",{attrs:{id:"_1-数字型进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数字型进制"}},[t._v("#")]),t._v(" 1.数字型进制")]),t._v(" "),a("ul",[a("li",[t._v("最常见的进制有二进制、八进制、十进制、十六进制。")])]),t._v(" "),a("h5",{attrs:{id:"_2-数字型范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数字型范围"}},[t._v("#")]),t._v(" 2.数字型范围")]),t._v(" "),a("ul",[a("li",[t._v("最大值 1.7976931348623157e+308")]),t._v(" "),a("li",[t._v("最小值 5e-324")])]),t._v(" "),a("h5",{attrs:{id:"_3-数字型的三个特殊值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数字型的三个特殊值"}},[t._v("#")]),t._v(" 3.数字型的三个特殊值")]),t._v(" "),a("ul",[a("li",[t._v("lnfinity ,代表无穷大，大于任何数值")]),t._v(" "),a("li",[t._v("-lnfinity ，代表无穷小，小于任何数值")]),t._v(" "),a("li",[t._v("NaN ,Not a number ，代表一个非数值")])]),t._v(" "),a("h5",{attrs:{id:"_4-isnan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-isnan"}},[t._v("#")]),t._v(" 4.isNaN()")]),t._v(" "),a("ul",[a("li",[t._v("用来判断一个变量是否为非数字的类型，返回true或者false")]),t._v(" "),a("li",[t._v("isNaN(）这个方法用来判断非数字――并且返回一个值 如果是数字返回的是 false 如果不是数字返回的是true")])]),t._v(" "),a("h4",{attrs:{id:"_3-字符串型string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串型string"}},[t._v("#")]),t._v(" 3.字符串型string")]),t._v(" "),a("ul",[a("li",[t._v("字符串型可以是引号中的任意文本，其语法为双引号\"\"和单引号''")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我爱北京天安门~"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用双引号表示字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我爱吃猪蹄~'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用单引号表示字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常见错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("我爱大时子"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错，没使用引号，会被认为是js代码，但js没有这些语法")]),t._v("\n")])])]),a("ul",[a("li",[t._v("因为HTML标签里面的属性使用的是双引号，JS这里我们更推荐使用单引号。")])]),t._v(" "),a("h5",{attrs:{id:"_1-字符串引号嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串引号嵌套"}},[t._v("#")]),t._v(" 1.字符串引号嵌套")]),t._v(" "),a("ul",[a("li",[t._v("JS可以用单引号嵌套双引号，或者用双引号嵌套单引号(外双内单，外单内双)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是\"高帅富\"程序猿'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//可以用\'包含""')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"我是'高帅富'程序猿\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//也可以用""包含”')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常见错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" badQuotes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 'What on earth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错，不能单双引号搭配")]),t._v("\n")])])]),a("h5",{attrs:{id:"_2-字符串转义符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串转义符"}},[t._v("#")]),t._v(" 2.字符串转义符")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("类似HTML里面的特殊字符，字符串中也有特殊字符，我们称之为转义符。")])]),t._v(" "),a("li",[a("p",[t._v("转义符都是\\开头的，常用的转义符及其说明如下∶")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("转义符")]),t._v(" "),a("th",[t._v("解释说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("换行符， n时newline的意思")])]),t._v(" "),a("tr",[a("td",[t._v("\\")]),t._v(" "),a("td",[t._v("斜杠\\")])]),t._v(" "),a("tr",[a("td",[t._v("'")]),t._v(" "),a("td",[t._v("' 单引号")])]),t._v(" "),a("tr",[a("td",[t._v('"')]),t._v(" "),a("td",[t._v('" 双引号')])]),t._v(" "),a("tr",[a("td",[t._v("\\t")]),t._v(" "),a("td",[t._v("tab缩进")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("空格， b时blank的意思")])])])]),t._v(" "),a("h5",{attrs:{id:"_3-字符串长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串长度"}},[t._v("#")]),t._v(" 3.字符串长度")]),t._v(" "),a("ul",[a("li",[t._v("字符串是由若千字符组成的，这些字符的数量就是字符串的长度。通过字符串的length属性可以获取整个字符串的长度。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" strMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是帅气多金的程序猿!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//显示 11")]),t._v("\n")])])]),a("h5",{attrs:{id:"_4-字符串拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串拼接"}},[t._v("#")]),t._v(" 4.字符串拼接")]),t._v(" "),a("ul",[a("li",[t._v("多个字符串之间可以使用＋进行拼接，其拼接方式为字符串＋任何类型=拼接之后的新字符串")]),t._v(" "),a("li",[t._v("拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//1.1字符串"相加"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// hello world //1.2数值字符串"相加”')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" l 100100l l "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v("数值字符串＋数值\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" '"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n")])])]),a("ul",[a("li",[t._v("+号总结口诀：数值相加，字符相连")])]),t._v(" "),a("h5",{attrs:{id:"_5-字符串拼接加强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串拼接加强"}},[t._v("#")]),t._v(" 5.字符串拼接加强")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pink老师+ 18'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只要有字符就会相连")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log ( 'pink老师age岁啦');")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这样不行哦")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pink老师'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" age'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//pink老师18")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pink老师'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'岁啦'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//pink老师18岁啦")]),t._v("\n")])])]),a("ul",[a("li",[t._v("我们经常会将字符串和变量来拼接，因为变量可以很方便地修改里面的值")]),t._v(" "),a("li",[t._v("变呈是不能添加引号的，因为加|号的变量会变成字符串")]),t._v(" "),a("li",[t._v("加果变量两侧都有字符串拼接，口诀“引引加功”，删掉数字，变量写加中间")])]),t._v(" "),a("h4",{attrs:{id:"_4-布尔型-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-布尔型-boolean"}},[t._v("#")]),t._v(" 4.布尔型 Boolean")]),t._v(" "),a("ul",[a("li",[t._v("布尔类型有两个值: true和false ，其中 true表示真(对），而false表示假(错)。")]),t._v(" "),a("li",[t._v("布尔型和数字型相加的时候，true的值为1 ,false的值为0。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-undefined和null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-undefined和null"}},[t._v("#")]),t._v(" 5.Undefined和Null")]),t._v(" "),a("ul",[a("li",[t._v("一个声明后没有被赋值的变量会有一个默认值undefined(如果进行相连或者相加时，注意结果)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你好undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lNaN")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("一个声明变量给null值，里面存的值为空（学习对象时，我们继续研究null)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vari "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \"你好' "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vari"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你好null")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vari"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vari"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_3-获取检测变量的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取检测变量的数据类型"}},[t._v("#")]),t._v(" 3.获取检测变量的数据类型")]),t._v(" "),a("h4",{attrs:{id:"_3-1获取检测变量的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1获取检测变量的数据类型"}},[t._v("#")]),t._v(" 3.1获取检测变量的数据类型")]),t._v(" "),a("ul",[a("li",[t._v("typeof可用来获取检测变量的数据类型")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num211 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num211"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str211 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str211"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" flag211 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag211"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vari211 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vari211"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timer211 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer211"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-2字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2字面量"}},[t._v("#")]),t._v(" 3.2字面量")]),t._v(" "),a("ul",[a("li",[t._v("字面量是在源代码中一个固定值的表示法，通俗来说，就是字面量表示如何表达这个值。\n"),a("ul",[a("li",[t._v("数字字面量:8,9,10")]),t._v(" "),a("li",[t._v('字符串字面量:黑马程序员\',"大前端"')]),t._v(" "),a("li",[t._v("布尔字面量: true , false")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据类型转换"}},[t._v("#")]),t._v(" 4.数据类型转换")]),t._v(" "),a("h4",{attrs:{id:"_4-1什么是数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1什么是数据类型转换"}},[t._v("#")]),t._v(" 4.1什么是数据类型转换")]),t._v(" "),a("ul",[a("li",[t._v("使用表单、prompt 获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算，而需要转换变量的数据类型。通俗染说，就是把一种数据类型的变量转换成另外一种数据类型。")]),t._v(" "),a("li",[t._v("我们通常会实现3种方式的转换∶\n"),a("ul",[a("li",[t._v("转换为字符串类型")]),t._v(" "),a("li",[t._v("转换为数字型")]),t._v(" "),a("li",[t._v("转换为布尔型")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-2转换为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2转换为字符串"}},[t._v("#")]),t._v(" 4.2转换为字符串")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方式")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("案例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("toString()")]),t._v(" "),a("td",[t._v("转成字符串")]),t._v(" "),a("td",[t._v("var num=1; alert(num.toString())")])]),t._v(" "),a("tr",[a("td",[t._v("String强制转换")]),t._v(" "),a("td",[t._v("转成字符串")]),t._v(" "),a("td",[t._v("var num=1; alert(num.String())")])]),t._v(" "),a("tr",[a("td",[t._v("加号拼接字符串")]),t._v(" "),a("td",[t._v("和字符串拼接的结果都是字符串")]),t._v(" "),a("td",[t._v("var num=1; alert(num+'我是字符串')")])])])]),t._v(" "),a("ul",[a("li",[t._v("oString0和String0使用方式不一样。")]),t._v(" "),a("li",[t._v("三种转换方式，我们更喜欢用第三种加号拼接字符串转换方式，这一种方式也称之为隐式转换。")])]),t._v(" "),a("h4",{attrs:{id:"_4-3转换为数字型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3转换为数字型"}},[t._v("#")]),t._v(" 4.3转换为数字型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方式")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("案例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("parselnt(string)函数")]),t._v(" "),a("td",[t._v("将string类型转成整数数值型")]),t._v(" "),a("td",[t._v("parselnt(\"78')")])]),t._v(" "),a("tr",[a("td",[t._v("parseFloat(string)函数")]),t._v(" "),a("td",[t._v("将string类型转成浮点数数值型")]),t._v(" "),a("td",[t._v("parseFloat('78.21')")])]),t._v(" "),a("tr",[a("td",[t._v("Number()强制转换函数")]),t._v(" "),a("td",[t._v("将string类型转换为数值型")]),t._v(" "),a("td",[t._v("Number(12')")])]),t._v(" "),a("tr",[a("td",[t._v("js隐式转换( - * l )")]),t._v(" "),a("td",[t._v("利用算术运算隐式转换为数值型")]),t._v(" "),a("td",[t._v("'12' -0")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-4转换为布尔型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4转换为布尔型"}},[t._v("#")]),t._v(" 4.4转换为布尔型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方式")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("案例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Boolean函数函数")]),t._v(" "),a("td",[t._v("将其它类型转成布尔型")]),t._v(" "),a("td",[t._v("Bolean('true')")])])])]),t._v(" "),a("ul",[a("li",[t._v('代表空、否定的值会被转换为false ，如"、0、NaN、 null、undefined')]),t._v(" "),a("li",[t._v("其余值会被转换为true\n"),a("LastUpdated")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);